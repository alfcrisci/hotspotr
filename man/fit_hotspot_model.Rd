% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fit-hotspot-model.R
\name{fit_hotspot_model}
\alias{fit_hotspot_model}
\title{fit_hotspot_model}
\usage{
fit_hotspot_model(z, nbs, wts, alpha = c(0.1, 0.1), ntests = 100,
  ac_type = "moran", sd0 = 0.1, verbose = FALSE, plot = FALSE)
}
\arguments{
\item{z}{Vector of observed values to be tested}

\item{nbs}{An \code{spdep} \code{nb} object listing all neighbours of each
point}

\item{wts}{Weighting factors for each neighbour; must have same length as
nbs. Uniform weights used if not given.}

\item{alpha}{Vector of two components providing starting values for the
strength of autocorrelation in time and space}

\item{ntests}{Number of repeats of neutral model used to calculate mean
rank--scale distribution}

\item{ac_type}{type of autocorrelation statistic to use in tests
(\code{moran}, \code{geary}, or \code{getis-ord}=\code{go})}

\item{sd0}{Standard deviation of truncated normal distribution used to model
environmental variation (with mean of 1)}

\item{verbose}{If TRUE, dump progress details to screen}

\item{plot}{If TRUE, produces a plot of rank--scale distributions}
}
\value{
A vector of four values as estimated by the neutral model:
\enumerate{
  \item alpha respectively containing temporal and spatial autocorrelation
  coefficients
  \item nt = Number of successive layers of spatio-temporal autocorrelation
  required to reproduce statistical properties of observed data
}
}
\description{
Fits a neutral model to an observed series of hotspot values in terms of
temporal and spatial autocorrelation parameters, and number of iterations of
these.
}
\section{Note}{

Fitting these neutral models is **not** a standard optimisation problem
because the models are very noisy. Although \code{optim} with
\code{method="SANN"} may be used, it often generates extremely large values
for \code{alpha} (for example, > 10). \code{DEoptim} could also be applied,
yet in generally does not explore anything useful---if given starting
parameters, it will generally remain exactly in that place.

The approach employed here reflects the comment of
https://stat.ethz.ch/pipermail/r-help/2015-May/428751.html
through simply producing regular series, fitting loess models, and taking the
corresponding minima.
}
\examples{
\dontrun{
alpha <- c (0.1, 0.1)
dat <- ives (size=10, nt=10, sd0=0.1, alpha=alpha)
test <- fit_hotspot_model (z=dat$dat$z, nbs=dat$nbs, alpha=alpha, ntests=100)
}

}

